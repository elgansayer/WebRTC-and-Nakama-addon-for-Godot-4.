image: barichello/godot-ci:3.2.3

variables:
  EXPORT_NAME: nakama-webrtc-demo

stages:
  - export
  - deploy

.export_before_script: &export_before_script
  before_script:
    - apt-get update
    - apt-get install -y --no-install-recommends ca-certificates unzip wget

    # Put in the production Nakama info
    - ./scripts/generate-build-variables.sh

windows:
  <<: *export_before_script
  stage: export
  script:
    # Delete the debug version of the plugin.
    - rm webrtc_debug/webrtc_debug.gdnlib

    # Export!
    - mkdir -v -p build/windows
    - godot -v --export "Windows Desktop" ./build/windows/$EXPORT_NAME.exe
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/windows

linux:
  <<: *export_before_script
  stage: export
  script:
    # Delete the debug version of the plugin.
    - rm webrtc_debug/webrtc_debug.gdnlib

    # Export!
    - mkdir -v -p build/linux
    - godot -v --export "Linux/X11" ./build/linux/$EXPORT_NAME.x86_64
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/linux

macosx:
  <<: *export_before_script
  stage: export
  script:
    # Delete the debug version of the plugin.
    - rm webrtc_debug/webrtc_debug.gdnlib

    # Export!
    - mkdir -v -p build/macosx
    - godot -v --export "Mac OSX" ./build/macosx/$EXPORT_NAME.zip

    # Extract the zip file since GitLab CI will zip it up again.
    - (cd ./build/macosx && unzip -a $EXPORT_NAME.zip && rm $EXPORT_NAME.zip)
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/macosx

web:
  <<: *export_before_script
  stage: export
  script:
    # Delete the WebRTC GDNative plugins.
    - rm -rf webrtc_debug webrtc

    - mkdir -v -p build/web
    - godot -v --export "HTML5" ./build/web/index.html
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/web

pages:
  stage: deploy
  dependencies:
    - web
  script:
    - rm -rf public
    - cp -r build/web public
  artifacts:
    paths:
      - public
  only:
   - master

